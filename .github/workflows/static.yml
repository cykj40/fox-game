name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Parcel
        run: parcel build src/index.html  dist  # Bundles the code into the 'dist' folder

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: ./dist  # Set the deployment directory to the 'dist' folder

      # Use an output to make the page_url available to the deployment environment
      - name: Set Page URL Output
        run: echo "::set-output name=page_url::https://$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1).github.io/$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)/"
        id: set_output

    # Use the output from the deployment step to set the URL for the environment
    # This allows you to access the page_url in the deploy environment
    outputs:
      page_url: ${{ steps.set_output.outputs.page_url }}











