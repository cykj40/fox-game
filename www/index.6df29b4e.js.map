{"mappings":"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","sources":["<anon>","src/init.js","src/gameState.js","src/constants.js","src/ui.js","src/buttons.js"],"sourcesContent":["const $30527df661259f19$export$fde44257752a9f60 = [\n    \"fish\",\n    \"poop\",\n    \"weather\"\n];\nconst $30527df661259f19$export$d3112996f706f1c = [\n    \"day\",\n    \"rain\"\n];\nconst $30527df661259f19$export$254fa44e74c824df = 3000;\nconst $30527df661259f19$export$d109769b7b60b20b = 0.2;\nconst $30527df661259f19$export$6deaf3182f1c1b32 = 60;\nconst $30527df661259f19$export$d948a4fe06c2f359 = 5;\nconst $30527df661259f19$export$57d09a4d1c60d13c = (clock)=>Math.floor(Math.random() * 3) + 8 + clock;\nconst $30527df661259f19$export$90ecfaab96696ff = (clock)=>Math.floor(Math.random() * 3) + 3 + clock;\nconst $30527df661259f19$export$c0dfc64653b730bf = (clock)=>Math.floor(Math.random() * 3) + 8 + clock;\n\n\nconst $ea23bd7a63c9796f$export$31edf49e44578506 = function modFox(state) {\n    document.querySelector(\".fox\").className = `fox fox-${state}`;\n};\nconst $ea23bd7a63c9796f$export$1f9518c2c59b8e99 = function modScene(state) {\n    document.querySelector(\".game\").className = `game ${state}`;\n};\nconst $ea23bd7a63c9796f$export$7ee9422b060e0e7b = function togglePoopBag(show) {\n    document.querySelector(\".poop-bag\").classList.toggle(\"hidden\", !show);\n};\nconst $ea23bd7a63c9796f$export$cd949469e93f219e = function writeModal(text = \"\") {\n    document.querySelector(\".modal\").innerHTML = `<div class=\"modal-inner\">${text}</div>`;\n};\n\n\nconst $c9bfdfadb452e31c$var$gameState = {\n    current: \"INIT\",\n    clock: 1,\n    wakeTime: -1,\n    sleepTime: -1,\n    hungryTime: -1,\n    dieTime: -1,\n    poopTime: -1,\n    timeToStartCelebrating: -1,\n    timeToEndCelebrating: -1,\n    scene: 0,\n    tick () {\n        this.clock++;\n        if (this.clock === this.wakeTime) this.wake();\n        else if (this.clock === this.sleepTime) this.sleep();\n        else if (this.clock === this.hungryTime) this.getHungry();\n        else if (this.clock === this.timeToStartCelebrating) this.startCelebrating();\n        else if (this.clock === this.timeToEndCelebrating) this.endCelebrating();\n        else if (this.clock === this.poopTime) this.poop();\n        else if (this.clock === this.dieTime) this.die();\n        return this.clock;\n    },\n    startGame () {\n        this.current = \"HATCHING\";\n        this.wakeTime = this.clock + 3;\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"egg\");\n        (0, $ea23bd7a63c9796f$export$1f9518c2c59b8e99)(\"day\");\n        (0, $ea23bd7a63c9796f$export$cd949469e93f219e)();\n    },\n    wake () {\n        this.current = \"IDLING\";\n        this.wakeTime = -1;\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"idling\");\n        this.scene = Math.random() > (0, $30527df661259f19$export$d109769b7b60b20b) ? 0 : 1;\n        (0, $ea23bd7a63c9796f$export$1f9518c2c59b8e99)((0, $30527df661259f19$export$d3112996f706f1c)[this.scene]);\n        this.determineFoxState();\n        this.sleepTime = this.clock + (0, $30527df661259f19$export$6deaf3182f1c1b32);\n        this.hungryTime = (0, $30527df661259f19$export$57d09a4d1c60d13c)(this.clock);\n    },\n    handleUserAction (icon) {\n        // can't do actions while in these states\n        if ([\n            \"SLEEP\",\n            \"FEEDING\",\n            \"CELEBRATING\",\n            \"HATCHING\"\n        ].includes(this.current)) // do nothing\n        return;\n        if (this.current === \"INIT\" || this.current === \"DEAD\") {\n            this.startGame();\n            return;\n        }\n        // execute the currently selected action\n        switch(icon){\n            case \"weather\":\n                this.changeWeather();\n                break;\n            case \"poop\":\n                this.cleanUpPoop();\n                break;\n            case \"fish\":\n                this.feed();\n                break;\n        }\n    },\n    changeWeather () {\n        this.scene = (1 + this.scene) % (0, $30527df661259f19$export$d3112996f706f1c).length;\n        (0, $ea23bd7a63c9796f$export$1f9518c2c59b8e99)((0, $30527df661259f19$export$d3112996f706f1c)[this.scene]);\n        this.determineFoxState();\n    },\n    cleanUpPoop () {\n        if (this.current === \"POOPING\") {\n            this.dieTime = -1;\n            (0, $ea23bd7a63c9796f$export$7ee9422b060e0e7b)(true);\n            this.startCelebrating();\n            this.hungryTime = (0, $30527df661259f19$export$57d09a4d1c60d13c)(this.clock);\n        }\n    },\n    poop () {\n        this.current = \"POOPING\";\n        this.poopTime = -1;\n        this.dieTime = (0, $30527df661259f19$export$90ecfaab96696ff)(this.clock);\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"pooping\");\n    },\n    feed () {\n        // can only feed when hungry\n        if (this.current !== \"HUNGRY\") return;\n        this.current = \"FEEDING\";\n        this.dieTime = -1;\n        this.poopTime = (0, $30527df661259f19$export$c0dfc64653b730bf)(this.clock);\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"eating\");\n        this.timeToStartCelebrating = this.clock + 2;\n    },\n    startCelebrating () {\n        this.current = \"CELEBRATING\";\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"celebrate\");\n        this.timeToStartCelebrating = -1;\n        this.timeToEndCelebrating = this.clock + 2;\n    },\n    endCelebrating () {\n        this.timeToEndCelebrating = -1;\n        this.current = \"IDLING\";\n        this.determineFoxState();\n        (0, $ea23bd7a63c9796f$export$7ee9422b060e0e7b)(false);\n    },\n    determineFoxState () {\n        if (this.current === \"IDLING\") {\n            if ((0, $30527df661259f19$export$d3112996f706f1c)[this.scene] === \"rain\") (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"rain\");\n            else (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"idling\");\n        }\n    },\n    clearTimes () {\n        this.wakeTime = -1;\n        this.sleepTime = -1;\n        this.hungryTime = -1;\n        this.dieTime = -1;\n        this.poopTime = -1;\n        this.timeToStartCelebrating = -1;\n        this.timeToEndCelebrating = -1;\n    },\n    sleep () {\n        this.current = \"SLEEP\";\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"sleep\");\n        (0, $ea23bd7a63c9796f$export$1f9518c2c59b8e99)(\"night\");\n        this.clearTimes();\n        this.wakeTime = this.clock + (0, $30527df661259f19$export$d948a4fe06c2f359);\n    },\n    getHungry () {\n        this.current = \"HUNGRY\";\n        this.dieTime = (0, $30527df661259f19$export$90ecfaab96696ff)(this.clock);\n        this.hungryTime = -1;\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"hungry\");\n    },\n    die () {\n        this.current = \"DEAD\";\n        (0, $ea23bd7a63c9796f$export$1f9518c2c59b8e99)(\"dead\");\n        (0, $ea23bd7a63c9796f$export$31edf49e44578506)(\"dead\");\n        this.clearTimes();\n        (0, $ea23bd7a63c9796f$export$cd949469e93f219e)(\"The fox died :( <br/> Press the middle button to start\");\n    }\n};\nconst $c9bfdfadb452e31c$export$ccab573699251c80 = $c9bfdfadb452e31c$var$gameState.handleUserAction.bind($c9bfdfadb452e31c$var$gameState);\nvar $c9bfdfadb452e31c$export$2e2bcd8739ae039 = $c9bfdfadb452e31c$var$gameState;\n\n\n\nconst $30be943f8bd0d4a2$var$toggleHighlighted = (icon, show)=>document.querySelector(`.${(0, $30527df661259f19$export$fde44257752a9f60)[icon]}-icon`).classList.toggle(\"highlighted\", show);\nfunction $30be943f8bd0d4a2$export$2e2bcd8739ae039(handleUserAction) {\n    let selectedIcon = 0;\n    function buttonClick({ target: target }) {\n        if (target.classList.contains(\"left-btn\")) {\n            $30be943f8bd0d4a2$var$toggleHighlighted(selectedIcon, false);\n            selectedIcon = (2 + selectedIcon) % (0, $30527df661259f19$export$fde44257752a9f60).length;\n            $30be943f8bd0d4a2$var$toggleHighlighted(selectedIcon, true);\n        } else if (target.classList.contains(\"right-btn\")) {\n            $30be943f8bd0d4a2$var$toggleHighlighted(selectedIcon, false);\n            selectedIcon = (1 + selectedIcon) % (0, $30527df661259f19$export$fde44257752a9f60).length;\n            $30be943f8bd0d4a2$var$toggleHighlighted(selectedIcon, true);\n        } else handleUserAction((0, $30527df661259f19$export$fde44257752a9f60)[selectedIcon]);\n    }\n    document.querySelector(\".buttons\").addEventListener(\"click\", buttonClick);\n}\n\n\n\nasync function $ed1f10388746f9c3$var$init() {\n    console.log(\"starting game\");\n    (0, $30be943f8bd0d4a2$export$2e2bcd8739ae039)((0, $c9bfdfadb452e31c$export$ccab573699251c80));\n    let nextTimeToTick = Date.now();\n    function nextAnimationFrame() {\n        const now = Date.now();\n        if (nextTimeToTick <= now) {\n            (0, $c9bfdfadb452e31c$export$2e2bcd8739ae039).tick();\n            nextTimeToTick = now + (0, $30527df661259f19$export$254fa44e74c824df);\n        }\n        requestAnimationFrame(nextAnimationFrame);\n    }\n    nextAnimationFrame();\n}\n$ed1f10388746f9c3$var$init();\n\n\n//# sourceMappingURL=index.6df29b4e.js.map\n","import game, { handleUserAction } from \"./gameState\";\nimport initButtons from \"./buttons\";\nimport { TICK_RATE } from \"./constants\";\n\nasync function init() {\n  console.log(\"starting game\");\n  initButtons(handleUserAction);\n\n  let nextTimeToTick = Date.now();\n  function nextAnimationFrame() {\n    const now = Date.now();\n    if (nextTimeToTick <= now) {\n      game.tick();\n      nextTimeToTick = now + TICK_RATE;\n    }\n    requestAnimationFrame(nextAnimationFrame);\n  }\n\n  nextAnimationFrame();\n}\n\ninit();\n","import {\n  SCENES,\n  RAIN_CHANCE,\n  DAY_LENGTH,\n  NIGHT_LENGTH,\n  getNextHungerTime,\n  getNextDieTime,\n  getNextPoopTime,\n} from \"./constants\";\nimport { modFox, modScene, togglePoopBag, writeModal } from \"./ui\";\n\nconst gameState = {\n  current: \"INIT\",\n  clock: 1,\n  wakeTime: -1,\n  sleepTime: -1,\n  hungryTime: -1,\n  dieTime: -1,\n  poopTime: -1,\n  timeToStartCelebrating: -1,\n  timeToEndCelebrating: -1,\n  scene: 0,\n  tick() {\n    this.clock++;\n    if (this.clock === this.wakeTime) {\n      this.wake();\n    } else if (this.clock === this.sleepTime) {\n      this.sleep();\n    } else if (this.clock === this.hungryTime) {\n      this.getHungry();\n    } else if (this.clock === this.timeToStartCelebrating) {\n      this.startCelebrating();\n    } else if (this.clock === this.timeToEndCelebrating) {\n      this.endCelebrating();\n    } else if (this.clock === this.poopTime) {\n      this.poop();\n    } else if (this.clock === this.dieTime) {\n      this.die();\n    }\n\n    return this.clock;\n  },\n  startGame() {\n    this.current = \"HATCHING\";\n    this.wakeTime = this.clock + 3;\n    modFox(\"egg\");\n    modScene(\"day\");\n    writeModal();\n  },\n  wake() {\n    this.current = \"IDLING\";\n    this.wakeTime = -1;\n    modFox(\"idling\");\n    this.scene = Math.random() > RAIN_CHANCE ? 0 : 1;\n    modScene(SCENES[this.scene]);\n    this.determineFoxState();\n    this.sleepTime = this.clock + DAY_LENGTH;\n    this.hungryTime = getNextHungerTime(this.clock);\n  },\n  handleUserAction(icon) {\n    // can't do actions while in these states\n    if (\n      [\"SLEEP\", \"FEEDING\", \"CELEBRATING\", \"HATCHING\"].includes(this.current)\n    ) {\n      // do nothing\n      return;\n    }\n\n    if (this.current === \"INIT\" || this.current === \"DEAD\") {\n      this.startGame();\n      return;\n    }\n\n    // execute the currently selected action\n    switch (icon) {\n      case \"weather\":\n        this.changeWeather();\n        break;\n      case \"poop\":\n        this.cleanUpPoop();\n        break;\n      case \"fish\":\n        this.feed();\n        break;\n    }\n  },\n  changeWeather() {\n    this.scene = (1 + this.scene) % SCENES.length;\n    modScene(SCENES[this.scene]);\n    this.determineFoxState();\n  },\n  cleanUpPoop() {\n    if (this.current === \"POOPING\") {\n      this.dieTime = -1;\n      togglePoopBag(true);\n      this.startCelebrating();\n      this.hungryTime = getNextHungerTime(this.clock);\n    }\n  },\n  poop() {\n    this.current = \"POOPING\";\n    this.poopTime = -1;\n    this.dieTime = getNextDieTime(this.clock);\n    modFox(\"pooping\");\n  },\n  feed() {\n    // can only feed when hungry\n    if (this.current !== \"HUNGRY\") {\n      return;\n    }\n\n    this.current = \"FEEDING\";\n    this.dieTime = -1;\n    this.poopTime = getNextPoopTime(this.clock);\n    modFox(\"eating\");\n    this.timeToStartCelebrating = this.clock + 2;\n  },\n  startCelebrating() {\n    this.current = \"CELEBRATING\";\n    modFox(\"celebrate\");\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = this.clock + 2;\n  },\n  endCelebrating() {\n    this.timeToEndCelebrating = -1;\n    this.current = \"IDLING\";\n    this.determineFoxState();\n    togglePoopBag(false);\n  },\n  determineFoxState() {\n    if (this.current === \"IDLING\") {\n      if (SCENES[this.scene] === \"rain\") {\n        modFox(\"rain\");\n      } else {\n        modFox(\"idling\");\n      }\n    }\n  },\n  clearTimes() {\n    this.wakeTime = -1;\n    this.sleepTime = -1;\n    this.hungryTime = -1;\n    this.dieTime = -1;\n    this.poopTime = -1;\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = -1;\n  },\n  sleep() {\n    this.current = \"SLEEP\";\n    modFox(\"sleep\");\n    modScene(\"night\");\n    this.clearTimes();\n    this.wakeTime = this.clock + NIGHT_LENGTH;\n  },\n  getHungry() {\n    this.current = \"HUNGRY\";\n    this.dieTime = getNextDieTime(this.clock);\n    this.hungryTime = -1;\n    modFox(\"hungry\");\n  },\n  die() {\n    this.current = \"DEAD\";\n    modScene(\"dead\");\n    modFox(\"dead\");\n    this.clearTimes();\n    writeModal(\"The fox died :( <br/> Press the middle button to start\");\n  },\n};\n\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\nexport default gameState;\n","export const ICONS = [\"fish\", \"poop\", \"weather\"];\nexport const SCENES = [\"day\", \"rain\"];\nexport const TICK_RATE = 3000;\nexport const RAIN_CHANCE = 0.2;\nexport const DAY_LENGTH = 60;\nexport const NIGHT_LENGTH = 5;\nexport const getNextHungerTime = (clock) =>\n  Math.floor(Math.random() * 3) + 8 + clock;\nexport const getNextDieTime = (clock) =>\n  Math.floor(Math.random() * 3) + 3 + clock;\nexport const getNextPoopTime = (clock) =>\n  Math.floor(Math.random() * 3) + 8 + clock;\n","export const modFox = function modFox(state) {\n  document.querySelector(\".fox\").className = `fox fox-${state}`;\n};\nexport const modScene = function modScene(state) {\n  document.querySelector(\".game\").className = `game ${state}`;\n};\nexport const togglePoopBag = function togglePoopBag(show) {\n  document.querySelector(\".poop-bag\").classList.toggle(\"hidden\", !show);\n};\nexport const writeModal = function writeModal(text = \"\") {\n  document.querySelector(\n    \".modal\",\n  ).innerHTML = `<div class=\"modal-inner\">${text}</div>`;\n};\n","import { ICONS } from \"./constants\";\n\nconst toggleHighlighted = (icon, show) =>\n  document\n    .querySelector(`.${ICONS[icon]}-icon`)\n    .classList.toggle(\"highlighted\", show);\n\nexport default function initButtons(handleUserAction) {\n  let selectedIcon = 0;\n  function buttonClick({ target }) {\n    if (target.classList.contains(\"left-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (2 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else if (target.classList.contains(\"right-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (1 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else {\n      handleUserAction(ICONS[selectedIcon]);\n    }\n  }\n\n  document.querySelector(\".buttons\").addEventListener(\"click\", buttonClick);\n}\n"],"names":["$30527df661259f19$export$fde44257752a9f60","$30527df661259f19$export$d3112996f706f1c","$30527df661259f19$export$57d09a4d1c60d13c","clock","Math","floor","random","$30527df661259f19$export$90ecfaab96696ff","$30527df661259f19$export$c0dfc64653b730bf","$ea23bd7a63c9796f$export$31edf49e44578506","state","document","querySelector","className","$ea23bd7a63c9796f$export$1f9518c2c59b8e99","$ea23bd7a63c9796f$export$7ee9422b060e0e7b","show","classList","toggle","$ea23bd7a63c9796f$export$cd949469e93f219e","text","innerHTML","$c9bfdfadb452e31c$var$gameState","current","wakeTime","sleepTime","hungryTime","dieTime","poopTime","timeToStartCelebrating","timeToEndCelebrating","scene","tick","wake","sleep","getHungry","startCelebrating","endCelebrating","poop","die","startGame","determineFoxState","handleUserAction","icon","includes","changeWeather","cleanUpPoop","feed","length","clearTimes","$c9bfdfadb452e31c$export$ccab573699251c80","bind","$30be943f8bd0d4a2$var$toggleHighlighted","$ed1f10388746f9c3$var$init","selectedIcon","console","log","addEventListener","target","contains","nextTimeToTick","Date","now","nextAnimationFrame","requestAnimationFrame"],"version":3,"file":"index.6df29b4e.js.map"}